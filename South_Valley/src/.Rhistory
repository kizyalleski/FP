as.data.frame() # преобразуем к типу дата фрейм из тибла
View(df_whole)
df_whole <-
read_excel(path = "../../data/data.xlsx") %>% # чтение данных
filter(Name != "Размерность") %>% # убираем строку с размерностью
select(-X, -Y) %>% # убираем столбцы с координатами
rename(id = Name) %>% # переименовываем name в id
mutate_at(vars(-Source), ~ as.numeric(.)) %>% # преобразуем в числовой тип
na_if(0) %>% # заменяем нули на na
as.data.frame() # преобразуем к типу дата фрейм из тибла
View(df_whole)
df_whole <-
read_excel(path = "../../data/data.xlsx") %>% # чтение данных
filter(Name != "Размерность") %>% # убираем строку с размерностью
select(-X, -Y) %>% # убираем столбцы с координатами
rename(id = Name) %>% # переименовываем name в id
mutate_at(vars(-Source), ~ as.numeric(.)) %>% # преобразуем в числовой тип
na_if(0) %>% # заменяем нули на na
as.data.frame() %>%  # преобразуем к типу дата фрейм из тибла
filter(id != 2024) %>%
filter(id != 2023)
# список элементов, которых нет в мишени
mix_na <-
df_whole %>%
filter(Source == "Mix") %>% # оставляем только строку целевого образца
select_if(is.na) %>% # выбираем столбцы с na
gather(var, val) %>% # переменную и значение ориентируем вертикально
pull(var) # извлекаем вектор названий
df_whole <-
read_excel(path = "../../data/data.xlsx") %>% # чтение данных
filter(Name != "Размерность") %>% # убираем строку с размерностью
select(-X, -Y) %>% # убираем столбцы с координатами
rename(id = Name) %>% # переименовываем name в id
mutate_at(vars(-Source), ~ as.numeric(.)) %>% # преобразуем в числовой тип
na_if(0) %>% # заменяем нули на na
as.data.frame() %>%  # преобразуем к типу дата фрейм из тибла
filter(id != 2024) %>%
filter(id != 2023)
# список элементов, которых нет в мишени
mix_na <-
df_whole %>%
filter(Source == "Mix") %>% # оставляем только строку целевого образца
select_if(is.na) %>% # выбираем столбцы с na
gather(var, val) %>% # переменную и значение ориентируем вертикально
pull(var) # извлекаем вектор названий
# получение итогового набора данных
df <-
df_whole %>%
select(!all_of(mix_na)) %>%  # оставляем только те элементы, которые есть в целевом образце
mutate_all(~replace(., is.na(.), 0)) # заменяем na на 0
# 2) ПРОВЕРКА НА КОЛЛИНЕАРНОСТЬ
collinears <-
df %>%
select(-id, -Source) %>%
correlate(method = "spearman") %>%
rearrange() %>%
shave() %>%
mutate_if(is.numeric, ~abs(.)) %>%
filter_if(is.numeric, any_vars(. > 0.85)) %>%
pull(term)
collinears
df_lda <-
df %>%
select(!any_of(collinears)) # создаем дф без коллинеарных элементов
df_lda %>%
LDAPlot(text = T)
View(df_lda)
df_lda <-
df_lda %>%
filter(id != 2001) %>%
filter(id != 20) %>%
filter(id != 27) %>%
filter(id != 2021) %>%
filter(id != 2005) %>%
filter(id != 2015) %>%
filter(id != 3004) %>%
filter(id != 24)
df_lda <-
df %>%
select(!any_of(collinears)) # создаем дф без коллинеарных элементов
df_lda <-
df_lda %>%
filter(id != 2001) %>%
filter(id != 20) %>%
filter(id != 27) %>%
filter(id != 2021) %>%
filter(id != 2005) %>%
filter(id != 2015) %>%
filter(id != 3004) %>%
filter(id != 24)
df_lda %>%
LDAPlot(text = T)
df_lda <-
df %>%
select(!any_of(collinears)) # создаем дф без коллинеарных элементов
df_lda <-
df_lda %>%
filter(id != 2001) %>%
filter(id != 20) %>%
filter(id != 27) %>%
filter(id != 2021) %>%
filter(id != 2005) %>%
filter(id != 2015) %>%
filter(id != 3004) %>%
filter(id != 24)
df_lda %>%
LDAPlot(text = T)
# 4) ВЫБОР ТРАССЕРОВ
df_lda %>%
rangeTest() %>%
KWTest(pvalue = 0.05)
DFATest(df_lda, niveau = 0.05)
# 5) БОКСПЛОТЫ
df %>%
select(id, Source, Al, Zn, smektit, kps, plagioklaz) %>%
gather(elem, cons, -id, -Source) %>%
ggplot(aes(x = Source,
y = cons,
color = Source)) +
geom_boxplot() +
geom_text(aes(label = id)) +
facet_wrap(~elem,
scales = "free_y")
# 5) БОКСПЛОТЫ
df %>%
select(id, Source, Al, Zn, kps, plagioklaz) %>%
gather(elem, cons, -id, -Source) %>%
ggplot(aes(x = Source,
y = cons,
color = Source)) +
geom_boxplot() +
geom_text(aes(label = id)) +
facet_wrap(~elem,
scales = "free_y")
# 6) ПОДТВЕРЖДЕНИЕ ТРАССЕРОВ
df_lda %>%
select(id, Source, Al, Zn, kps, plagioklaz) %>%
LDAPlot(text = T)
# 7) Размешивание
results <-
df_lda %>%
select(id, Source, Al, Zn, kps, plagioklaz) %>%
unmix(samples = 200, iter = 300)
results %>%
plotResults()
# 6) ПОДТВЕРЖДЕНИЕ ТРАССЕРОВ
df_lda %>%
select(id, Source, Al, Zn, kps, plagioklaz) %>%
LDAPlot(text = T)
df_lda <-
df %>%
select(!any_of(collinears)) # создаем дф без коллинеарных элементов
df_lda <-
df_lda %>%
filter(id != 2001) %>%
filter(id != 20) %>%
filter(id != 27) %>%
filter(id != 2021) %>%
filter(id != 2005) %>%
filter(id != 2015) %>%
filter(id != 3004) %>%
filter(id != 24)
df_lda %>%
LDAPlot(text = T)
# 6) ПОДТВЕРЖДЕНИЕ ТРАССЕРОВ
df_lda %>%
select(id, Source, Al, Zn, kps, plagioklaz) %>%
LDAPlot(text = T)
View(df_lda)
df_lda <-
df_lda %>%
filter(id != 2001) %>%
filter(id != 20) %>%
filter(id != 27) %>%
filter(id != 2021) %>%
filter(id != 2005) %>%
filter(id != 2015) %>%
filter(id != 3004) %>%
filter(id != 24) %>%
filter(id != 2007) %>%
filter(id != 28) %>%
filter(id != 2020) %>%
filter(id != 2019)
df_lda %>%
LDAPlot(text = T)
# 4) ВЫБОР ТРАССЕРОВ
df_lda %>%
rangeTest() %>%
KWTest(pvalue = 0.05)
DFATest(df_lda, niveau = 0.05)
# 6) ПОДТВЕРЖДЕНИЕ ТРАССЕРОВ
df_lda %>%
select(id, Source, Al, Zn, kps, plagioklaz) %>%
LDAPlot(text = T)
df_lda <-
df %>%
select(!any_of(collinears)) # создаем дф без коллинеарных элементов
df_lda <-
df_lda %>%
filter(id != 2001) %>%
filter(id != 20) %>%
filter(id != 27) %>%
filter(id != 2021) %>%
filter(id != 2005) %>%
filter(id != 2015) %>%
filter(id != 3004) %>%
filter(id != 24) %>%
filter(id != 2007) %>%
filter(id != 28) %>%
filter(id != 2020) %>%
filter(id != 2019) %>%
filter(id != 3003) %>%
filter(id != 2028) %>%
filter(id != 2029)
df_lda %>%
LDAPlot(text = T)
# 6) ПОДТВЕРЖДЕНИЕ ТРАССЕРОВ
df_lda %>%
select(id, Source, Al, Zn, kps, plagioklaz) %>%
LDAPlot(text = T)
# 7) Размешивание
results <-
df_lda %>%
select(id, Source, Al, Zn, kps, plagioklaz) %>%
unmix(samples = 200, iter = 300)
results %>%
plotResults()
df_lda %>%
LDAPlot(text = T)
# 4) ВЫБОР ТРАССЕРОВ
df_lda %>%
rangeTest() %>%
KWTest(pvalue = 0.05)
DFATest(df_lda, niveau = 0.05)
# 5) БОКСПЛОТЫ
df %>%
select(id, Source, Al, Zn, kps, plagioklaz) %>%
gather(elem, cons, -id, -Source) %>%
ggplot(aes(x = Source,
y = cons,
color = Source)) +
geom_boxplot() +
geom_text(aes(label = id)) +
facet_wrap(~elem,
scales = "free_y")
# 6) ПОДТВЕРЖДЕНИЕ ТРАССЕРОВ
df_lda %>%
select(id, Source, Al, Zn, kps, plagioklaz) %>%
LDAPlot(text = T)
# 7) Размешивание
results <-
df_lda %>%
select(id, Source, Al, Zn, kps, plagioklaz) %>%
unmix(samples = 200, iter = 300)
results %>%
plotResults()
setwd("C:/FP/North_Valley/src/morphology")
library(tidyverse)
library(dplyr)
library(fingerPro)
library(readxl)
library(corrr)
df_north_morphology <-
read_excel(path = "../../data/North_Valley_data.xlsx") %>% # чтение данных
filter(Name != "Размерность") %>% # убираем строку с размерностью
select(-X, -Y) %>% # убираем столбцы с координатами
rename(id = Name) %>% # переименовываем name в id
mutate_at(vars(-Source), ~ as.numeric(.)) %>% # преобразуем в числовой тип
na_if(0) %>% # заменяем нули на na
as.data.frame() %>% # преобразуем к типу дата фрейм из тибла
filter(id != 3001)
# список элементов, которых нет в мишени
mix_na <-
df_north_morphology %>%
filter(Source == "Mix") %>% # оставляем только строку целевого образца
select_if(is.na) %>% # выбираем столбцы с na
gather(var, val) %>% # переменную и значение ориентируем вертикально
pull(var) # извлекаем вектор названий
# получение итогового набора данных
df <-
df_north_morphology %>%
select(!all_of(mix_na)) %>%  # оставляем только те элементы, которые есть в целевом образце
mutate_all(~replace(., is.na(.), 0)) # заменяем na на 0
# 2) ПРОВЕРКА НА КОЛЛИНЕАРНОСТЬ
collinears <-
df %>%
select(-id, -Source) %>%
correlate(method = "spearman") %>%
rearrange() %>%
shave() %>%
mutate_if(is.numeric, ~abs(.)) %>%
filter_if(is.numeric, any_vars(. > 0.85)) %>%
pull(term)
collinears
df_lda <-
df %>%
select(!any_of(collinears))   # создаем дф без коллинеарных элементов
df_lda %>%
LDAPlot(text = T)
df_north_morphology <-
read_excel(path = "../../data/all_data.xlsx") %>% # чтение данных
filter(Name != "Размерность") %>% # убираем строку с размерностью
select(-X, -Y) %>% # убираем столбцы с координатами
rename(id = Name) %>% # переименовываем name в id
mutate_at(vars(-Source), ~ as.numeric(.)) %>% # преобразуем в числовой тип
na_if(0) %>% # заменяем нули на na
as.data.frame() %>% # преобразуем к типу дата фрейм из тибла
filter(id != 3001)
# список элементов, которых нет в мишени
mix_na <-
df_north_morphology %>%
filter(Source == "Mix") %>% # оставляем только строку целевого образца
select_if(is.na) %>% # выбираем столбцы с na
gather(var, val) %>% # переменную и значение ориентируем вертикально
pull(var) # извлекаем вектор названий
# получение итогового набора данных
df <-
df_north_morphology %>%
select(!all_of(mix_na)) %>%  # оставляем только те элементы, которые есть в целевом образце
mutate_all(~replace(., is.na(.), 0)) # заменяем na на 0
# 2) ПРОВЕРКА НА КОЛЛИНЕАРНОСТЬ
collinears <-
df %>%
select(-id, -Source) %>%
correlate(method = "spearman") %>%
rearrange() %>%
shave() %>%
mutate_if(is.numeric, ~abs(.)) %>%
filter_if(is.numeric, any_vars(. > 0.85)) %>%
pull(term)
collinears
df_lda <-
df %>%
select(!any_of(collinears))   # создаем дф без коллинеарных элементов
df_lda %>%
LDAPlot(text = T)
# 4) ВЫБОР ТРАССЕРОВ
df_lda %>%
rangeTest() %>%
KWTest(pvalue = 0.3)
DFATest(df_lda, niveau = 0.3)
# 5) БОКСПЛОТЫ
df %>%
select(id, Source, plagioklaz,  sluda) %>% #Ca, Zn, sluda) %>%
gather(elem, cons, -id, -Source) %>%
ggplot(aes(x = Source,
y = cons,
color = Source)) +
geom_boxplot() +
geom_text(aes(label = id)) +
facet_wrap(~elem,
scales = "free_y")
# 6) ПОДТВЕРЖДЕНИЕ ТРАССЕРОВ
df_lda %>%
select(id, Source, plagioklaz, sluda) %>%   #Ca, Zn, sluda) %>%
LDAPlot(text = T)
# 6) ПОДТВЕРЖДЕНИЕ ТРАССЕРОВ
df_lda %>%
select(id, Source, plagioklaz, hlorit) %>%   #Ca, Zn, sluda) %>%
LDAPlot(text = T)
# 6) ПОДТВЕРЖДЕНИЕ ТРАССЕРОВ
df_lda %>%
select(id, Source, plagioklaz, sluda) %>%   #Ca, Zn, sluda) %>%
LDAPlot(text = T)
# 7) Размешивание
results <-
df_lda %>%
select(id, Source, plagioklaz, hlorit) %>%
unmix(samples = 100, iter = 1000)
results %>%
plotResults()
# 6) ПОДТВЕРЖДЕНИЕ ТРАССЕРОВ
df_lda %>%
select(id, Source, plagioklaz, sluda, hlorit) %>%   #Ca, Zn, sluda) %>%
LDAPlot(text = T)
# 7) Размешивание
results <-
df_lda %>%
select(id, Source, plagioklaz, sluda, hlorit) %>%
unmix(samples = 100, iter = 1000)
results %>%
plotResults()
df_lda %>%
LDAPlot(text = T)
# 5) БОКСПЛОТЫ
df %>%
select(id, Source, plagioklaz,  sluda, hlorit) %>% #Ca, Zn, sluda) %>%
gather(elem, cons, -id, -Source) %>%
ggplot(aes(x = Source,
y = cons,
color = Source)) +
geom_boxplot() +
geom_text(aes(label = id)) +
facet_wrap(~elem,
scales = "free_y")
# 6) ПОДТВЕРЖДЕНИЕ ТРАССЕРОВ
df_lda %>%
select(id, Source, plagioklaz, sluda, hlorit) %>%   #Ca, Zn, sluda) %>%
LDAPlot(text = T)
# 7) Размешивание
results <-
df_lda %>%
select(id, Source, plagioklaz, sluda, hlorit) %>%
unmix(samples = 100, iter = 1000)
results %>%
plotResults()
df_south_morphology <-
read_excel(path = "../data/morph_2.xlsx") %>% # чтение данных
filter(Name != "Размерность") %>% # убираем строку с размерностью
select(-X, -Y) %>% # убираем столбцы с координатами
rename(id = Name) %>% # переименовываем name в id
mutate_at(vars(-Source), ~ as.numeric(.)) %>% # преобразуем в числовой тип
na_if(0) %>% # заменяем нули на na
as.data.frame() %>%  # преобразуем к типу дата фрейм из тибла
select(-Bi)
setwd("C:/FP/South_Valley/src")
setwd("C:/FP/South_Valley/src")
setwd("C:/FP/South_Valley/src")
df_south_morphology <-
read_excel(path = "../data/morph_2.xlsx") %>% # чтение данных
filter(Name != "Размерность") %>% # убираем строку с размерностью
select(-X, -Y) %>% # убираем столбцы с координатами
rename(id = Name) %>% # переименовываем name в id
mutate_at(vars(-Source), ~ as.numeric(.)) %>% # преобразуем в числовой тип
na_if(0) %>% # заменяем нули на na
as.data.frame() %>%  # преобразуем к типу дата фрейм из тибла
select(-Bi)
# список элементов, которых нет в мишени
mix_na <-
df_south_morphology %>%
filter(Source == "mix") %>% # оставляем только строку целевого образца
select_if(is.na) %>% # выбираем столбцы с na
gather(var, val) %>% # переменную и значение ориентируем вертикально
pull(var) # извлекаем вектор названий
# получение итогового набора данных
df <-
df_south_morphology %>%
select(!all_of(mix_na)) %>%  # оставляем только те элементы, которые есть в целевом образце
mutate_all(~replace(., is.na(.), 0)) # заменяем na на 0
# 2) ПРОВЕРКА НА КОЛЛИНЕАРНОСТЬ
collinears <-
df %>%
select(-id, -Source) %>%
correlate(method = "spearman") %>%
rearrange() %>%
shave() %>%
mutate_if(is.numeric, ~abs(.)) %>%
filter_if(is.numeric, any_vars(. > 0.85)) %>%
pull(term)
collinears
df_lda <-
df %>%
select(!any_of(collinears)) # создаем дф без коллинеарных элементов
df_lda %>%
LDAPlot(text = T)
df_south_morphology <-
read_excel(path = "../data/south_valley_morphology_data.xlsx") %>% # чтение данных
filter(Name != "Размерность") %>% # убираем строку с размерностью
select(-X, -Y) %>% # убираем столбцы с координатами
rename(id = Name) %>% # переименовываем name в id
mutate_at(vars(-Source), ~ as.numeric(.)) %>% # преобразуем в числовой тип
na_if(0) %>% # заменяем нули на na
as.data.frame() %>%  # преобразуем к типу дата фрейм из тибла
select(-Bi)
df_south_morphology <-
read_excel(path = "../data/south_valley_morphology_data.xlsx") %>% # чтение данных
filter(Name != "Размерность") %>% # убираем строку с размерностью
select(-X, -Y) %>% # убираем столбцы с координатами
rename(id = Name) %>% # переименовываем name в id
mutate_at(vars(-Source), ~ as.numeric(.)) %>% # преобразуем в числовой тип
na_if(0) %>% # заменяем нули на na
as.data.frame() %>%  # преобразуем к типу дата фрейм из тибла
select(-Bi)
# список элементов, которых нет в мишени
mix_na <-
df_south_morphology %>%
filter(Source == "mix") %>% # оставляем только строку целевого образца
select_if(is.na) %>% # выбираем столбцы с na
gather(var, val) %>% # переменную и значение ориентируем вертикально
pull(var) # извлекаем вектор названий
# получение итогового набора данных
df <-
df_south_morphology %>%
select(!all_of(mix_na)) %>%  # оставляем только те элементы, которые есть в целевом образце
mutate_all(~replace(., is.na(.), 0)) # заменяем na на 0
# 2) ПРОВЕРКА НА КОЛЛИНЕАРНОСТЬ
collinears <-
df %>%
select(-id, -Source) %>%
correlate(method = "spearman") %>%
rearrange() %>%
shave() %>%
mutate_if(is.numeric, ~abs(.)) %>%
filter_if(is.numeric, any_vars(. > 0.85)) %>%
pull(term)
collinears
df_lda <-
df %>%
select(!any_of(collinears)) # создаем дф без коллинеарных элементов
df_lda %>%
LDAPlot(text = T)
# 5) БОКСПЛОТЫ
df %>%
select(id, Source, K, sluda) %>%
gather(elem, cons, -id, -Source) %>%
ggplot(aes(x = Source,
y = cons,
color = Source)) +
geom_boxplot() +
geom_text(aes(label = id)) +
facet_wrap(~elem,
scales = "free_y")
